# Note: this blazar yaml has been copied to all of the maven submodules so that they can be properly configured
# If you make changes to this, you will need to make sure all submodules are also updated accordingly
# If you added a new submodule, you'll need to make sure it gets a copy of this .blazar.yaml
# In either case, use copy_blazar_yaml.sh to copy to all subdirs containing a pom.xml

buildpack:
  host: git.hubteam.com
  organization: HubSpotProtected
  repository: Blazar-Buildpack-Java
  branch: v2

env:
  MAIN_BRANCH: "hubspot-2.x"
  STAGING_BRANCH: "hubspot-2.x-staging"
  MAVEN_ARGS: -Phadoop-3.0 -Dhadoop.profile=3.0 -Dhadoop-three.version=3.2.2 -DskipTests=true

before:
  - description: "Apply build patches"
    commands:
      - |
        set -ex
        if [[ "X$WORKSPACE" != "X" ]]; then
          pushd $WORKSPACE
        fi

        ./patches/apply.sh

        if [[ "X$WORKSPACE" != "X" ]]; then
          popd
        fi
  - description: "Set SNAPSHOT versions"
    commands:
      - |
        echo "Git branch $GIT_BRANCH. Detecting appropriate version override."
        VERSION=""
        if [[ "$GIT_BRANCH" = "$MAIN_BRANCH" ]]; then
          VERSION="2.0-hubspot-SNAPSHOT"
        elif [[ "$GIT_BRANCH" = "$STAGING_BRANCH" ]]; then
          VERSION="2.0-staging-SNAPSHOT"
        elif [[ "$GIT_BRANCH" != "hubspot" && "$GIT_BRANCH" != "staging" ]]; then
          VERSION="2.0-${GIT_BRANCH}-SNAPSHOT"
        else
          echo "Invalid git branch $GIT_BRANCH"
          exit 1
        fi

        # We set SET_VERSION here instead of SET_VERSION_OVERRIDE because
        # the step 'env' section does not source the rc file.
        echo "export SET_VERSION='$VERSION'" >> $BUILD_COMMAND_RC_FILE
